scala> import util.control.Breaks._
import util.control.Breaks._

scala> breakable {
     | for (i <- 1 to 10 ) {
     | if(i > 5) break
     | println(i)
     | }
     | }
1
2
3
4
5


scala> def loop(f : Int => Boolean) = breakable {
     | for (i <- 1 to 300) if (f(i)) break else println(i)
     | }
loop: (f: (Int) => Boolean)Unit

// This never ends because break is caught by breakable in the loop method
scala> breakable {
     | while(true) {
     | loop{ i => break; true }
     | }
     | }
