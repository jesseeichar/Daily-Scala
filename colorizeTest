Inline <code>case class Template()</code> done 
<pre><code>
scala> val world="world"
scala> println ('>'+"hi "+world+"!")
</code></pre>

In between

<pre><code>
for( i <- 1 to 10 ) yield i
</code></pre>
<pre><code>
/* This is a code snippet */
&lt;xml&gt;
  &lt;child x="att"/&gt;
  &lt;child2 /&gt;
&lt;/xml&gt;
</code></pre>

<pre><code>
val sep = """\A?([\s<>=+-:;/\\+,!\(\)\{\}'\|\&\^\[\] ]?)"""

/**
 * Scala doc
 */
case class Block(start:String, end:String, styleClass:String){
  //Single line comment
  val Contains="""(\A.*)(%s.*%s)(.*\z)""".format(start,end).r
  val Starts="""^(.*)(%s.*\z)""".format(start).r
  val Ends = """^(.*%s)(.*\z)""".format(end).r

  /*
   * many line comment
   */
  override def toString = """Line 1
line2
line3"""

  @Annotation
  private def index(f:String=>Int)(line:String) = f(line) match {
    case x if (x < 0) => None
    case x => Some(x)
  }
  @Annotation def lastIndexOf = index(line => line.lastIndexOf(start)) _

  @Annotation(param1="value")
  def indexOf = index(line => line.indexOf(start)) _

  val l = List[String]()

  if( true != false ) println(Nan)
}

</code></pre>

<code class="Java">
/**
 *  Javadoc
 */
public static interface MyJavaInterface{
  //a comment
  /*
   * another comment 
  */
  public static String hi = "goog";
}
</code>